https://waspro.tistory.com/516
https://hiseon.me/linux/ubuntu/ubuntu-kubernetes-install/

wget https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/linux/amd64/kubectl
chmod +x kubectl
sudo mv kubectl /usr/local/bin/
kubectl version --client

sudo apt install apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add

echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
sudo apt update
#sudo apt purge kubelet kubeadm kubectl kubernetes-cni -y
sudo apt install kubelet kubeadm kubectl kubernetes-cni -y

sudo sysctl -w net.bridge.bridge-nf-call-iptables=1
sudo sysctl -w net.ipv4.ip_forward=1
sudo kubeadm init --pod-network-cidr=10.244.0.0/16

kubeadm join 192.168.0.139:6443 --token mwgtue.owjemi7u9b22eypw \
    --discovery-token-ca-cert-hash sha256:f658cc174c6161de6fba0888dd15aac13f57f4ae2cb92e34637af506409378c9

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

sudo kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
sleep 60
kubectl get nodes

#sudo kubeadm join 172.31.20.231:6443 --token 95bt0c.dqi8yv7xzhbqgwcp --discovery-token-ca-cert-hash sha256:b2c7c12685340f8782013b2fe0c1521c74f02994b9f15a068f13a38a39c114c0
#kubectl get nodes

chmod 777 /var/run/docker.sock

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
kubectl get pods --all-namespaces
sleep 60
#kubectl -n kube-system get service kubernetes-dashboard
kubectl proxy --accept-hosts='^*' &

# 인증키 생성
cat <<EOF | tee ~/dashboard-adminuser.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kubernetes-dashboard
EOF

kubectl apply -f dashboard-adminuser.yaml

kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')




http://mykube-admin/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
http://mykube-admin/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login


sudo apt install apache2 -y
sudo a2enmod ssl
sudo a2enmod proxy
sudo a2enmod proxy_html
sudo a2enmod proxy_http
sudo a2enmod rewrite

vi /etc/apache2/apache2.conf
<Directory /var/www/html>
AllowOverride All
</Directory>

mkdir /etc/apache2/certificate
cd /etc/apache2/certificate
openssl req -new -newkey rsa:4096 -x509 -sha256 -days 365 -nodes -out apache-certificate.crt -keyout apache.key

cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf_bak
#mv /etc/apache2/sites-available/000-default.conf_bak /etc/apache2/sites-available/000-default.conf

cat <<EOF | sudo tee /etc/apache2/sites-available/000-default.conf
<VirtualHost *:80>
  ServerName dooheehong323

  SSLEngine off
  ProxyPreserveHost On
  ProxyRequests Off

  RewriteEngine On
  RewriteCond %{HTTPS} !=on
  RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R=301,L]

  <Directory />
    AllowOverride All
    Options All
    Require all granted
  </Directory>
</VirtualHost>

<VirtualHost *:443>
  ServerName dooheehong323

  SSLEngine on
  
  SSLCertificateKeyFile /etc/apache2/certificate/apache.key
  SSLCertificateFile /etc/apache2/certificate/apache-certificate.crt

  ProxyPreserveHost On
  ProxyRequests Off

  ProxyPass / http://127.0.0.1:8001/
  ProxyPassReverse / http://127.0.0.1:8001/

  <Directory />
    AllowOverride All
    Options All
    Require all granted
  </Directory>
</VirtualHost>

EOF

sudo service apache2 restart
sudo service apache2 status

curl http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/.
https://dooheehong323/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/#/login
** 인증서
https://support.securly.com/hc/en-us/articles/206058318-How-to-install-the-Securly-SSL-certificate-on-Mac-OSX-



1.13.0
kubeadm version


####################################
# remove all k8s
####################################
sudo systemctl stop kube-apiserver kube-controller-manager kube-scheduler
sudo systemctl disable kube-apiserver kube-controller-manager kube-scheduler

sudo systemctl stop kubelet kube-proxy
sudo systemctl disable kubelet kube-proxy

sudo rm -Rf /usr/local/bin/kube*

sudo systemctl stop etcd
sudo systemctl disable etcd
sudo rm -Rf /usr/local/bin/etcd*

sudo service haproxy stop
sudo systemctl disable haproxy
rm -Rf /var/lib/etcd/*
sudo swapoff -a
